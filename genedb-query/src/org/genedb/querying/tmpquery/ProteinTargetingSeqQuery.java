package org.genedb.querying.tmpquery;

import org.genedb.querying.core.LuceneQuery;
import org.genedb.querying.core.QueryClass;
import org.genedb.querying.core.QueryParam;

import org.apache.lucene.index.Term;
import org.apache.lucene.search.BooleanQuery;
import org.apache.lucene.search.Query;
import org.apache.lucene.search.TermQuery;
import org.apache.lucene.search.WildcardQuery;
import org.apache.lucene.search.BooleanClause.Occur;
import org.springframework.util.StringUtils;
import org.springframework.validation.Errors;
import org.springframework.validation.Validator;

import java.io.IOException;
import java.util.Collection;
import java.util.List;

@QueryClass(
        title="Coding and pseudogenes by protein length",
        shortDesc="Get a list of transcripts ",
        longDesc=""
    )
public class ProteinTargetingSeqQuery extends LuceneQuery {


    @QueryParam(
            order=1,
            title="Minimum length of protein in bases"
    )
    private boolean present;


	@Override
	protected String getluceneIndexName() {
		return "org.gmod.schema.mapped.Feature";
	}

    protected void getQueryTerms(List<org.apache.lucene.search.Query> queries) {

        Query q = new TermQuery(new Term("proteinTargeting","true"));

        queries.add(q);
        //if (pseudogenes) {
        //    queries.add(geneOrPseudogeneQuery);
        //} else {
            queries.add(geneQuery);
        //}

//        BooleanQuery organismQuery = makeQueryForOrganisms(orgNames);
//        queries.add(organismQuery);
    }

    // ------ Autogenerated code below here


    public boolean isPresent() {
        return present;
    }

    public void setPresent(boolean present) {
        this.present = present;
    }

    @Override
	protected String[] getParamNames() {
		return new String[] {"present"};
	}


    public Validator getValidator() {
        return new Validator() {
            @Override
            public void validate(Object target, Errors errors) {
                return;
            }

            @Override
            public boolean supports(Class clazz) {
                return ProteinTargetingSeqQuery.class.isAssignableFrom(clazz);
            }
        };
    }

}
