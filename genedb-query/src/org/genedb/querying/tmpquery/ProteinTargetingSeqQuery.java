package org.genedb.querying.tmpquery;

import org.genedb.querying.core.HqlQuery;
import org.genedb.querying.core.QueryClass;
import org.genedb.querying.core.QueryParam;

import org.springframework.validation.Errors;
import org.springframework.validation.Validator;

@QueryClass(
        title="Coding and pseudogenes by protein length",
        shortDesc="Get a list of transcripts ",
        longDesc=""
    )
public class ProteinTargetingSeqQuery extends HqlQuery {

    @QueryParam(
            order=1,
            title="Minimum length of protein in bases"
    )
    private boolean present;

    @Override
    protected String getHql() {
        return "select f.uniqueName from Feature f where f.type.name='polypeptide' and f.seqLen >= :min and f.seqLen <= :max";
    }

    // ------ Autogenerated code below here

    public boolean isPresent() {
        return present;
    }

    public void setPresent(boolean present) {
        this.present = present;
    }

    @Override
    protected String[] getParamNames() {
        return new String[] {"present"};
    }

    @Override
    protected void populateQueryWithParams(org.hibernate.Query query) {
        query.setBoolean("present", present);
    }


    public Validator getValidator() {
        return new Validator() {
            @Override
            public void validate(Object target, Errors errors) {
                return;
            }

            @Override
            public boolean supports(Class clazz) {
                return ProteinTargetingSeqQuery.class.isAssignableFrom(clazz);
            }
        };
    }


}
