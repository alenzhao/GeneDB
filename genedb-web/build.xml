<?xml version="1.0"?>

<project name="genedb-web" default="get-latest-jars" basedir=".">

  <!-- Paths/Properties you may have to change -->
  <property file="property-file.${deploy}" />

  <dirname property="imported.basedir.web" file="${ant.file.genedb-web}"/>
  <import file="${imported.basedir.web}/../genedb-query/build.xml"/>
  <import file="${imported.basedir.web}/../genedb-domain/build.xml"/>
  <import file="${imported.basedir.web}/../genedb-util/build.xml"/>

  <property name="version" value="0.2"/>
  <property name="jar-build" value="ant-build/jar-build"/>
  <property name="lib-dir" value="${imported.basedir.web}/../genedb-libs/lib/"/>
  <property name="in-lib-dir" value="${imported.basedir.web}/WebContent/WEB-INF/lib"/>

  <!-- Paths -->
  <path id="libs">
    <path location="${in-lib-dir}/artemis.jar" />

    <path location="${imported.basedir.web}/../genedb-db/ant-build/jars/genedb-db.jar" />
    <path location="${imported.basedir.web}/../genedb-domain/ant-build/jars/genedb-domain.jar"/>
    <path location="${imported.basedir.web}/../genedb-query/ant-build/jars/genedb-query.jar" />
    <path location="${imported.basedir.web}/../genedb-util/ant-build/jars/genedb-util.jar" />

    <path location="${lib-dir}/biojava/biojava-1.4.jar"/>
    <path location="${lib-dir}/db/je-3.3.69.jar" />
    <path location="${lib-dir}/db/postgresql-8.3-603.jdbc4.jar" />
    <path location="${lib-dir}/hibernate-extras/hibernate-search-3.0.1GA.jar"/>
    <path location="${lib-dir}/json/json_simple.jar"/>
    <path location="${lib-dir}/json/json-lib-2.2.1-jdk15.jar" />
    <path location="${lib-dir}/json/json-lib-ext-spring-1.0.1.jar" />
    <path location="${lib-dir}/json/ezmorph-1.0.4.jar" />
    <path location="${lib-dir}/lucene/lucene-core-2.3.2.jar"/>
    <path location="${lib-dir}/misc/antlr-runtime-3.0.jar"/>
    <path location="${lib-dir}/misc/displaytag-1.1.jar"/>
    <path location="${lib-dir}/misc/dwr-2.0rc1.jar"/>
    <path location="${lib-dir}/misc/google-collect-snapshot-20080820.jar" />
    <path location="${lib-dir}/misc/jakarta-oro-2.0.8.jar"/>
    <path location="${lib-dir}/misc/jewelcli-0.53.jar" />
    <path location="${lib-dir}/spring-bundle-2.5.6/slf4j/slf4j-api-1.5.0.jar" />
    <path location="${lib-dir}/spring-bundle-2.5.6/slf4j/slf4j-log4j12-1.5.0.jar" />
    <path location="${lib-dir}/spring-bundle-2.5.6/antlr/antlr-2.7.6.jar"/>
    <path location="${lib-dir}/spring-bundle-2.5.6/aspectj/aspectjrt.jar"/>
    <path location="${lib-dir}/spring-bundle-2.5.6/cglib/cglib-nodep-2.1_3.jar"/>
    <path location="${lib-dir}/spring-bundle-2.5.6/dom4j/dom4j-1.6.1.jar"/>
    <path location="${lib-dir}/spring-bundle-2.5.6/dom4j/jaxen-1.1-beta-7.jar"/>
    <path location="${lib-dir}/spring-bundle-2.5.6/freemarker/freemarker.jar"/>
    <path location="${lib-dir}/spring-bundle-2.5.6/hibernate/hibernate-annotations.jar"/>
    <path location="${lib-dir}/spring-bundle-2.5.6/hibernate/hibernate-commons-annotations.jar"/>
    <path location="${lib-dir}/spring-bundle-2.5.6/hibernate/hibernate3.jar"/>
    <path location="${lib-dir}/spring-bundle-2.5.6/jakarta-commons/commons-beanutils.jar"/>
    <path location="${lib-dir}/spring-bundle-2.5.6/jakarta-commons/commons-collections.jar"/>
    <path location="${lib-dir}/spring-bundle-2.5.6/jakarta-commons/commons-dbcp.jar"/>
    <path location="${lib-dir}/spring-bundle-2.5.6/jakarta-commons/commons-fileupload.jar"/>
    <path location="${lib-dir}/spring-bundle-2.5.6/jakarta-commons/commons-io.jar"/>
    <path location="${lib-dir}/spring-bundle-2.5.6/jakarta-commons/commons-lang.jar"/>
    <path location="${lib-dir}/spring-bundle-2.5.6/jakarta-commons/commons-logging.jar"/>
    <path location="${lib-dir}/spring-bundle-2.5.6/jakarta-commons/commons-pool.jar"/>
    <path location="${lib-dir}/spring-bundle-2.5.6/jakarta-taglibs/standard.jar"/>
    <path location="${lib-dir}/spring-bundle-2.5.6/javassist/javassist-3.4.GA.jar"/>
    <path location="${lib-dir}/spring-bundle-2.5.6/j2ee/jstl.jar"/>
    <path location="${lib-dir}/spring-bundle-2.5.6/j2ee/jta.jar"/>
    <path location="${lib-dir}/spring-bundle-2.5.6/j2ee/persistence.jar" />
    <path location="${lib-dir}/spring-bundle-2.5.6/log4j/log4j-1.2.15.jar"/>
    <path location="${lib-dir}/spring-bundle-2.5.6/poi/poi-3.0.1.jar"/>
    <path location="${lib-dir}/spring-core-2.5.6/spring.jar" />
    <path location="${lib-dir}/spring-core-2.5.6/spring-aspects.jar" />
    <path location="${lib-dir}/spring-core-2.5.6/spring-webmvc.jar" />
    <path location="${lib-dir}/misc/jsr107cache-1.0.jar" />
    <path location="${lib-dir}/misc/jewelcli-0.53.jar" />
    <path location="${lib-dir}/xml/jdom.jar"/>
  </path>

  <path id="compile-libs">
    <path refid="libs"/>
    <path location="${imported.basedir.web}/lib/jsp-api.jar" />
    <path location="${imported.basedir.web}/lib/servlet-api.jar" />
  </path>


  <taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties">
    <classpath>
      <pathelement location="${genedb-db.libdir}/aspectj-1.6.2/aspectjtools.jar"/>
    </classpath>
  </taskdef>

	<!--
  <taskdef classname="org.apache.jasper.JspC" name="jasper2">
    <classpath id="jspc.classpath">
      <pathelement location="${java.home}/../lib/tools.jar"/>
      <fileset dir="${catalina.home}/lib">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="${catalina.home}/bin">
        <include name="*.jar"/>
      </fileset>
    </classpath>
  </taskdef>
-->

  <target name="get-latest-jars" description="Copy over JAR files from other projects">
    <copy flatten="true" todir="${finaldest.webapps}/WEB-INF/lib">
      <path refid="libs" />
    </copy>
  </target>

  <target name="make-other-projects" depends="genedb-domain.fulljar-domain,genedb-query.fulljar-query,genedb-db.make-db-jar,genedb-util.fulljar" />

  <target name="make-all-and-deploy" depends="check-deploy, compile, final-deploy, get-latest-jars"/>

  <target name="clean-web">
    <delete dir="${imported.basedir.web}/ant-build" quiet="true"/>
  </target>

  <target name="fast-deploy" depends="check-deploy, compile, final-deploy, get-latest-jars"/>

  <!-- =================================
          target: compile
         ================================= -->
  <target name="compile" depends="clean-web, make-other-projects"
        description="--> Compile classes">

    <mkdir dir="ant-build/classes"/>
    <javac srcdir="src" classpathref="compile-libs" destdir="ant-build/classes" encoding="utf-8" debug="on">
      <compilerarg line="-Xlint:unchecked" />
    </javac>

    <copyfile dest="ant-build/classes2/org/genedb/web/mvc/model/PopulateCaches.class" src="ant-build/classes/org/genedb/web/mvc/model/PopulateCaches.class" />

    <iajc verbose="true"
            destdir="ant-build/classes"
            inpath="ant-build/classes2"
            aspectpathref="aspect.path"
            classpathRef ="db-compile-lib"
            />


  </target>

  <target name="deploy" depends="pre-deploy, application-deploy, post-deploy"/>

  <target name="pre-deploy" depends="check-deploy">
    <filter token="webAppRootKey" value="${webAppRootKey}" />
    <delete dir="${finaldest.webapps}.tmp" failonerror="false"/>
    <mkdir dir="${finaldest.webapps}.tmp"/>
    <copy todir="${finaldest.webapps}.tmp">
      <fileset dir="WebContent" casesensitive="false" followSymLinks="false" excludesfile="WebContent/WEB-INF/web.xml"/>
    </copy>
    <echo message="About to filter web.xml" />
    <delete file="${finaldest.webapps}.tmp/WEB-INF/web.xml" failonerror="false" />
    <copy file="WebContent/WEB-INF/web.xml" tofile="${finaldest.webapps}.tmp/WEB-INF/web.xml" filtering="true" />
    <echo message="Done filtering web.xml" />
    <copy todir="${finaldest.webapps}.tmp/WEB-INF/classes">
      <fileset dir="ant-build/classes" casesensitive="false" followSymLinks="false" />
    </copy>
    <copy file="property-file.${deploy}" tofile="${finaldest.webapps}.tmp/WEB-INF/classes/project.properties" overwrite="true" />
  </target>

  <target name="application-deploy" />
  <!-- depends="deploy-Jogra" -->

  <target name="post-deploy" />

  <target name="final-deploy" depends="deploy" description="Deployment step once server is shut down">
    <echo>About to delete ${finaldest.webapps}.old</echo>
    <delete dir="${finaldest.webapps}.old" failonerror="false"/>
    <move file="${finaldest.webapps}" tofile="${finaldest.webapps}.old" failonerror="false" />
    <move file="${finaldest.webapps}.tmp" tofile="${finaldest.webapps}" />
    <delete dir="${finaldest.webapps}.old" failonerror="false"/>
    <!-- temp hack -->
  </target>


  <target name="restart-ci-web">
    <exec executable="/nfs/pathdata/jira/bin/shutdown.sh" failifexecutionfails="true" failonerror="true" />
    <sleep seconds="5" />
    <delete dir="/nfs/pathdb/genedb/ci-web/logs" failonerror="false"/>
    <mkdir dir="/nfs/pathdb/genedb/ci-web/logs" />
    <exec executable="/nfs/pathdata/jira/bin/startup.sh"  failifexecutionfails="true" failonerror="true" />
    <sleep seconds="30" />
  </target>

  <path id="application-classpath">
    <path refid="libs" />
    <path path="property-file.${deploy}" />
    <path path="ant-build/classes" />
    <path path="WebContent/WEB-INF" />
    <path path="WebContent/WEB-INF/classes" />
    <path path="${lib-dir}/spring-bundle-2.5.4/j2ee/servlet-api.jar"/>
    <path location="WebContent/WEB-INF/lib/backport-util-concurrent.jar"/>
    <path path="${lib-dir}/misc/jsr107cache-1.0.jar" />
    <path path="${lib-dir}/db/je-3.3.69.jar" />
    <!--<path path="${lib-dir}/spring-bundle-2.5.6/aspectj/aspectjweaver.jar" /> -->

  </path>

  <target name="check-deploy">
    <fail message="The 'deploy' property must be set" unless="deploy"/>
    <available file="${imported.basedir.web}/property-file.${deploy}" property="deploy-file-exists"/>
    <fail message="The file ${imported.basedir.web}/property-file.${deploy} does not exist" unless="deploy-file-exists"/>
    <copy file="${imported.basedir.web}/property-file.${deploy}" tofile="${imported.basedir.web}/WebContent/WEB-INF/classes/project.properties" overwrite="true" />
  </target>

<!--
  <target name="jsp_test">
    <property name="webapp.staging" location="ant-build/webapp"/>
    <property name="catalina.home" location="/software/pathogen/projects/genedb/snapshot/external/apache-tomcat-6.0.16"/>
    <property name="jsp-src.dir" location="ant-build/jsp-src"/>

    <mkdir dir="${webapp.staging}" />
    <copy todir="${webapp.staging}">
      <fileset dir="WebContent" id="id" />
    </copy>
    <copy flatten="true" todir="${webapp.staging}/WEB-INF/lib">
      <path refid="libs" />
    </copy>
    <copy todir="${webapp.staging}/WEB-INF/classes">
      <fileset dir="ant-build/classes" id="id" />
    </copy>
    <antcall target="jspc" />
  </target>

  <target name="jspc"> -->
    <!-- Convert the JSP files into Java code -->
    <!--<jasper2 validateXml="false" uriroot="${webapp.staging}" webXmlFragment="${webapp.staging}/generated_web.xml" outputDir="${jsp-src.dir}"/>-->

    <!-- Compile the JSP-generated java files -->
<!--    <javac destdir="${webapp.staging}/WEB-INF/classes" optimize="off" debug="on" failonerror="true" fork="yes" memoryInitialSize="128M"
       memoryMaximumSize="184M" srcdir="${jsp-src.dir}">

      <classpath>
        <pathelement location="${webapp.staging}/WEB-INF/classes"/>
        <fileset dir="${webapp.staging}/WEB-INF/lib">
          <include name="*.jar"/>
        </fileset>
        <pathelement location="${catalina.home}/common/classes"/>
        <fileset dir="${catalina.home}/lib">
          <include name="*.jar"/>
        </fileset>
        <pathelement location="${catalina.home}/shared/classes"/>
        <fileset dir="${catalina.home}/bin">
          <include name="*.jar"/>
        </fileset>
      </classpath>

      <include name="**"/>
      <exclude name="tags/**"/>
    </javac>
  </target>


  <target name="create_web.xml"> -->

    <!--
   This creates a web.xml from a template and the generated fragments
  --><!--
    <loadfile property="generated" srcFile="${webinf.staging}/generated_web.xml"/>
    <filter token="generated_web.xml" value="${generated}"/>
    <loadfile property="webServlets" srcFile="${webinf.staging}/webServlets_web.xml"/>
    <filter token="webServlets_web.xml" value="${webServlets}"/>
    <loadfile property="webMappings" srcFile="${webinf.staging}/webMappings_web.xml"/>
    <filter token="webMappings_web.xml" value="${webMappings}"/>
    <copy file="${webinf.staging}/template_web.xml" toFile="${webinf.staging}/web.xml" filtering="true" overwrite="true" />
  </target>
-->

	  <target name="populate-caches" depends="check-deploy,compile" description="Populate the Berkeley DB with TranscriptDTO and images">
	    <java fork="true" classpathref="application-classpath" classname="org.genedb.web.mvc.model.PopulateCaches">
	      <jvmarg value="-Xmx512m"/>
	      <jvmarg value="-XX:+HeapDumpOnOutOfMemoryError" />
	      <!-- In the comments below, the long args should be a double dash, but that confuses XML comments -->
	      <!-- <arg line="-o Pfalciparum -debugCount 20 -globalFileRoot /tmp"/> -->
	      <!-- <arg line="-globalFileRoot /nfs/pathdata/jira/ci-deployment/webapps/gi/tmp"/> -->
	      <!-- <arg line="-o Pberghei_3x"/> -->
	      <!-- <arg line="-ncm" /> -->
	    </java>
	  </target>

</project>
