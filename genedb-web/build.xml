<?xml version="1.0"?>

<project name="genedb-web" default="get-latest-jars" basedir="."
  xmlns:ivy="antlib:org.apache.ivy.ant" >

  <dirname property="imported.basedir.web" file="${ant.file.genedb-web}"/>

  <import file="${imported.basedir.web}/../genedb-libs/build.xml" />
  <import file="${imported.basedir.web}/../genedb-query/build.xml"/>
  <import file="${imported.basedir.web}/../genedb-db/build.xml"/>
  <import file="${imported.basedir.web}/../genedb-domain/build.xml"/>
  <import file="${imported.basedir.web}/../genedb-util/build.xml"/>

  <!-- Paths/Properties you may have to change -->
  <property file="property-file.${deploy}" />

  <property name="version" value="0.2"/>
  <property name="jar-build" value="ant-build/jar-build"/>
  <property name="lib-dir" value="${imported.basedir.libs}/lib/"/>
  <property name="in-lib-dir" value="${imported.basedir.web}/WebContent/WEB-INF/lib"/>

  <!-- Paths -->
  <path id="web-deploy-classpath">
      <pathelement location="${in-lib-dir}/artemis.jar" />
      <pathelement location="${imported.basedir.db}/ant-build/dist/genedb-db.jar" />
      <pathelement location="${imported.basedir.domain}/ant-build/dist/genedb-domain.jar"/>
      <pathelement location="${imported.basedir.query}/ant-build/dist/genedb-query.jar" />
      <pathelement location="${imported.basedir.util}/ant-build/dist/genedb-util.jar" />

      <fileset dir="${imported.basedir.web}/lib">
        <include name="*.jar"/>
      </fileset>

      <pathelement location="${lib-dir}/misc/displaytag-1.1.jar"/>
      <pathelement location="${lib-dir}/misc/ezmorph-1.0.4.jar"/>
      <pathelement location="${lib-dir}/db/je-3.3.75.jar"/>
      <pathelement location="${lib-dir}/misc/jewelcli-0.53.jar"/>
      <pathelement location="${lib-dir}/json/json-lib-2.2.1-jdk15.jar"/>
      <pathelement location="${lib-dir}/json/json-lib-ext-spring-1.0.1.jar"/>
  </path>

  <path id="web-classpath">
    <path refid="web-deploy-classpath"/>
    <fileset dir="${imported.basedir.libs}/lib/web">
      <include name="*.jar"/>
    </fileset>
  </path>

  <target name="get-latest-jars" description="Copy over JAR files from other projects">
    <copy flatten="true" todir="${finaldest.webapps}/WEB-INF/lib">
      <path refid="web-classpath" />
    </copy>
  </target>

  <target name="make-other-projects" depends="genedb-domain.fulljar-domain,genedb-query.fulljar-query,genedb-db.fulljar-db,genedb-util.fulljar-util" />

  <target name="make-all-and-deploy" depends="check-deploy, compile, final-deploy, get-latest-jars"/>

  <target name="clean-web">
    <delete dir="${imported.basedir.web}/ant-build" quiet="true"/>
  </target>

  <target name="fast-deploy" depends="check-deploy, compile, final-deploy, get-latest-jars"/>

  <!-- =================================
          target: compile
       ================================= -->
  <target name="compile" depends="clean-web, make-other-projects"
        description="--> Compile classes">

    <init project="web"/>
    <compile-target project="web"/>
    <copyfile dest="${imported.basedir.web}/ant-build/woven-classes/org/genedb/web/mvc/model/PopulateCaches.class" src="${imported.basedir.web}/ant-build/classes/org/genedb/web/mvc/model/PopulateCaches.class" />
    <iajc-target project="web" from-directory="${imported.basedir.web}/ant-build/woven-classes"
                               to-directory="${imported.basedir.web}/ant-build/classes"/>
  </target>

  <target name="deploy" depends="pre-deploy, application-deploy, post-deploy"/>

  <target name="pre-deploy" depends="check-deploy">
    <filter token="webAppRootKey" value="${webAppRootKey}" />
    <delete dir="${finaldest.webapps}.tmp" failonerror="false"/>
    <mkdir dir="${finaldest.webapps}.tmp"/>
    <copy todir="${finaldest.webapps}.tmp">
      <fileset dir="WebContent" casesensitive="false" followSymLinks="false" excludesfile="WebContent/WEB-INF/web.xml"/>
    </copy>
    <echo message="About to filter web.xml" />
    <delete file="${finaldest.webapps}.tmp/WEB-INF/web.xml" failonerror="false" />
    <copy file="WebContent/WEB-INF/web.xml" tofile="${finaldest.webapps}.tmp/WEB-INF/web.xml" filtering="true" />
    <echo message="Done filtering web.xml" />
    <copy todir="${finaldest.webapps}.tmp/WEB-INF/classes">
      <fileset dir="ant-build/classes" casesensitive="false" followSymLinks="false" />
    </copy>
    <copy file="property-file.${deploy}" tofile="${finaldest.webapps}.tmp/WEB-INF/classes/project.properties" overwrite="true" />
  </target>

  <target name="application-deploy" />
  <!-- depends="deploy-Jogra" -->

  <target name="post-deploy" />

  <target name="final-deploy" depends="deploy" description="Deployment step once server is shut down">
    <echo>About to delete ${finaldest.webapps}.old</echo>
    <delete dir="${finaldest.webapps}.old" failonerror="false"/>
    <move file="${finaldest.webapps}" tofile="${finaldest.webapps}.old" failonerror="false" />
    <move file="${finaldest.webapps}.tmp" tofile="${finaldest.webapps}" />
    <delete dir="${finaldest.webapps}.old" failonerror="false"/>
    <!-- temp hack -->
  </target>


  <target name="restart-ci-web">
    <exec executable="/nfs/pathdata/jira/bin/shutdown.sh" failifexecutionfails="true" failonerror="true" />
    <sleep seconds="5" />
    <delete dir="/nfs/pathdb/genedb/ci-web/logs" failonerror="false"/>
    <mkdir dir="/nfs/pathdb/genedb/ci-web/logs" />
    <exec executable="/nfs/pathdata/jira/bin/startup.sh"  failifexecutionfails="true" failonerror="true" />
    <sleep seconds="30" />
  </target>

  <target name="check-deploy">
    <fail message="The 'deploy' property must be set" unless="deploy"/>
    <available file="${imported.basedir.web}/property-file.${deploy}" property="deploy-file-exists"/>
    <fail message="The file ${imported.basedir.web}/property-file.${deploy} does not exist" unless="deploy-file-exists"/>
    <copy file="${imported.basedir.web}/property-file.${deploy}" tofile="${imported.basedir.web}/WebContent/WEB-INF/classes/project.properties" overwrite="true" />
  </target>


  <target name="jsp_test">
    <property name="webapp.staging" location="ant-build/webapp"/>
    <property name="catalina.home" location="/software/pathogen/projects/genedb/snapshot/external/apache-tomcat-6.0.16"/>
    <property name="jsp-src.dir" location="ant-build/jsp-src"/>

    <mkdir dir="${webapp.staging}" />
    <copy todir="${webapp.staging}">
      <fileset dir="WebContent" id="id" />
    </copy>
    <copy flatten="true" todir="${webapp.staging}/WEB-INF/lib">
      <path refid="libs" />
    </copy>
    <copy todir="${webapp.staging}/WEB-INF/classes">
      <fileset dir="ant-build/classes" id="id" />
    </copy>
    <antcall target="jspc" />
  </target>

  <target name="jspc">
    <!-- Convert the JSP files into Java code -->
    <jasper2 validateXml="false" uriroot="${webapp.staging}" webXmlFragment="${webapp.staging}/generated_web.xml" outputDir="${jsp-src.dir}"/>

    <!-- Compile the JSP-generated java files -->
    <javac destdir="${webapp.staging}/WEB-INF/classes" optimize="off" debug="on" failonerror="true" fork="yes" memoryInitialSize="128M"
       memoryMaximumSize="184M" srcdir="${jsp-src.dir}">

      <classpath>
        <pathelement location="${webapp.staging}/WEB-INF/classes"/>
        <fileset dir="${webapp.staging}/WEB-INF/lib">
          <include name="*.jar"/>
        </fileset>
        <pathelement location="${catalina.home}/common/classes"/>
        <fileset dir="${catalina.home}/lib">
          <include name="*.jar"/>
        </fileset>
        <pathelement location="${catalina.home}/shared/classes"/>
        <fileset dir="${catalina.home}/bin">
          <include name="*.jar"/>
        </fileset>
      </classpath>

      <include name="**"/>
      <exclude name="tags/**"/>
    </javac>
  </target>


  <target name="create_web.xml">
    <!--
       This creates a web.xml from a template and the generated fragments
      -->
    <loadfile property="generated" srcFile="${webinf.staging}/generated_web.xml"/>
    <filter token="generated_web.xml" value="${generated}"/>
    <loadfile property="webServlets" srcFile="${webinf.staging}/webServlets_web.xml"/>
    <filter token="webServlets_web.xml" value="${webServlets}"/>
    <loadfile property="webMappings" srcFile="${webinf.staging}/webMappings_web.xml"/>
    <filter token="webMappings_web.xml" value="${webMappings}"/>
    <copy file="${webinf.staging}/template_web.xml" toFile="${webinf.staging}/web.xml" filtering="true" overwrite="true" />
  </target>


    <target name="populate-caches" depends="check-deploy,compile" description="Populate the Berkeley DB with TranscriptDTO and images">
      <java fork="true" classpathref="web-classpath" classname="org.genedb.web.mvc.model.PopulateCaches">
        <jvmarg value="-Xmx512m"/>
        <jvmarg value="-XX:+HeapDumpOnOutOfMemoryError" />
        <!-- In the comments below, the long args should be a double dash, but that confuses XML comments -->
        <!-- <arg line="-o Pfalciparum -debugCount 20 -globalFileRoot /tmp"/> -->
        <!-- <arg line="-globalFileRoot /nfs/pathdata/jira/ci-deployment/webapps/gi/tmp"/> -->
        <!-- <arg line="-o Pberghei_3x"/> -->
        <!-- <arg line="-ncm" /> -->
      </java>
    </target>

</project>
