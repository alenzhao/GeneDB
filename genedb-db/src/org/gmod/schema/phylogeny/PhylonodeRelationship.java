package org.gmod.schema.phylogeny;
// Generated Aug 31, 2006 4:02:18 PM by Hibernate Tools 3.2.0.beta7


import org.gmod.schema.cv.CvTerm;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * PhylonodeRelationship generated by hbm2java
 */
@Entity
@Table(name="phylonode_relationship", uniqueConstraints = { @UniqueConstraint( columnNames = { "subject_id", "object_id", "type_id" } ) })
public class PhylonodeRelationship  implements java.io.Serializable {

    // Fields

     private int phylonodeRelationshipId;
     private Phylonode phylonodeBySubjectId;
     private Phylonode phylonodeByObjectId;
     private CvTerm cvTerm;
     private Integer rank;

     // Constructors

    /** default constructor */
    public PhylonodeRelationship() {
        // Deliberately empty default constructor
    }

    /** minimal constructor */
    public PhylonodeRelationship(int phylonodeRelationshipId, Phylonode phylonodeBySubjectId, Phylonode phylonodeByObjectId, CvTerm cvTerm) {
        this.phylonodeRelationshipId = phylonodeRelationshipId;
        this.phylonodeBySubjectId = phylonodeBySubjectId;
        this.phylonodeByObjectId = phylonodeByObjectId;
        this.cvTerm = cvTerm;
    }
    /** full constructor */
    public PhylonodeRelationship(int phylonodeRelationshipId, Phylonode phylonodeBySubjectId, Phylonode phylonodeByObjectId, CvTerm cvTerm, Integer rank) {
       this.phylonodeRelationshipId = phylonodeRelationshipId;
       this.phylonodeBySubjectId = phylonodeBySubjectId;
       this.phylonodeByObjectId = phylonodeByObjectId;
       this.cvTerm = cvTerm;
       this.rank = rank;
    }

    // Property accessors
     @Id

    @Column(name="phylonode_relationship_id", unique=true, nullable=false, insertable=true, updatable=true)
    public int getPhylonodeRelationshipId() {
        return this.phylonodeRelationshipId;
    }

    public void setPhylonodeRelationshipId(int phylonodeRelationshipId) {
        this.phylonodeRelationshipId = phylonodeRelationshipId;
    }
@ManyToOne(cascade={},fetch=FetchType.LAZY)

    @JoinColumn(name="subject_id", unique=false, nullable=false, insertable=true, updatable=true)
    public Phylonode getPhylonodeBySubjectId() {
        return this.phylonodeBySubjectId;
    }

    public void setPhylonodeBySubjectId(Phylonode phylonodeBySubjectId) {
        this.phylonodeBySubjectId = phylonodeBySubjectId;
    }
@ManyToOne(cascade={},fetch=FetchType.LAZY)

    @JoinColumn(name="object_id", unique=false, nullable=false, insertable=true, updatable=true)
    public Phylonode getPhylonodeByObjectId() {
        return this.phylonodeByObjectId;
    }

    public void setPhylonodeByObjectId(Phylonode phylonodeByObjectId) {
        this.phylonodeByObjectId = phylonodeByObjectId;
    }
@ManyToOne(cascade={},fetch=FetchType.LAZY)

    @JoinColumn(name="type_id", unique=false, nullable=false, insertable=true, updatable=true)
    public CvTerm getCvTerm() {
        return this.cvTerm;
    }

    public void setCvTerm(CvTerm cvTerm) {
        this.cvTerm = cvTerm;
    }

    @Column(name="rank", unique=false, nullable=true, insertable=true, updatable=true)
    public Integer getRank() {
        return this.rank;
    }

    public void setRank(Integer rank) {
        this.rank = rank;
    }




}


