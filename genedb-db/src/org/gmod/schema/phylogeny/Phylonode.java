package org.gmod.schema.phylogeny;

// Generated Aug 31, 2006 4:02:18 PM by Hibernate Tools 3.2.0.beta7

import org.gmod.schema.cv.CvTerm;
import org.gmod.schema.sequence.Feature;

import java.util.Collection;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Phylonode generated by hbm2java
 */
@Entity
@Table(name = "phylonode", uniqueConstraints = {
        @UniqueConstraint(columnNames = { "phylotree_id", "left_idx" }),
        @UniqueConstraint(columnNames = { "phylotree_id", "right_idx" }) })
public class Phylonode implements java.io.Serializable {

    // Fields
    @Id
    @Column(name = "phylonode_id", unique = true, nullable = false, insertable = true, updatable = true)
    private int phylonodeId;

    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
    @JoinColumn(name = "phylotree_id", unique = false, nullable = false, insertable = true, updatable = true)
    private Phylotree phylotree;

    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
    @JoinColumn(name = "parent_phylonode_id", unique = false, nullable = true, insertable = true, updatable = true)
    private Phylonode parent;

    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
    @JoinColumn(name = "type_id", unique = false, nullable = true, insertable = true, updatable = true)
    private CvTerm cvTerm;

    @ManyToOne(cascade = {}, fetch = FetchType.LAZY)
    @JoinColumn(name = "feature_id", unique = false, nullable = true, insertable = true, updatable = true)
    private Feature feature;

    @Column(name = "left_idx", unique = false, nullable = false, insertable = true, updatable = true)
    private int leftIdx;

    @Column(name = "right_idx", unique = false, nullable = false, insertable = true, updatable = true)
    private int rightIdx;

    @Column(name = "label", unique = false, nullable = true, insertable = true, updatable = true)
    private String label;

    @Column(name = "distance", unique = false, nullable = true, insertable = true, updatable = true, precision = 17, scale = 17)
    private Double distance;

    @OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "phylonodeByObjectId")
    private Collection<PhylonodeRelationship> phylonodeRelationshipsForObjectId;

    @OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "phylonode")
    private Collection<PhylonodeOrganism> phylonodeOrganisms;

    @OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "phylonode")
    private Collection<PhylonodePub> phylonodePubs;

    @OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "phylonodeBySubjectId")
    private Collection<PhylonodeRelationship> phylonodeRelationshipsForSubjectId;

    @OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "phylonode")
    private Collection<PhylonodeDbXRef> phylonodeDbXRefs;

    @OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "phylonode")
    private Collection<PhylonodeProp> phylonodeProps;

    @OneToMany(cascade = { CascadeType.ALL }, fetch = FetchType.LAZY, mappedBy = "parent")
    private Collection<Phylonode> children;

    // Constructors

    /** default constructor */
    private Phylonode() {
        // Deliberately empty default constructor
    }

    /** minimal constructor */
    private Phylonode(int phylonodeId, Phylotree phylotree, int leftIdx, int rightIdx) {
        this.phylonodeId = phylonodeId;
        this.phylotree = phylotree;
        this.leftIdx = leftIdx;
        this.rightIdx = rightIdx;
    }

    /** full constructor */
    private Phylonode(int phylonodeId, Phylotree phylotree, Phylonode parent, CvTerm cvTerm,
            Feature feature, int leftIdx, int rightIdx, String label, Double distance,
            Collection<PhylonodeRelationship> phylonodeRelationshipsForObjectId,
            Collection<PhylonodeOrganism> phylonodeOrganisms, Collection<PhylonodePub> phylonodePubs,
            Collection<PhylonodeRelationship> phylonodeRelationshipsForSubjectId,
            Collection<PhylonodeDbXRef> phylonodeDbXRefs, Collection<PhylonodeProp> phylonodeProps) {
        this.phylonodeId = phylonodeId;
        this.phylotree = phylotree;
        this.parent = parent;
        this.cvTerm = cvTerm;
        this.feature = feature;
        this.leftIdx = leftIdx;
        this.rightIdx = rightIdx;
        this.label = label;
        this.distance = distance;
        this.phylonodeRelationshipsForObjectId = phylonodeRelationshipsForObjectId;
        this.phylonodeOrganisms = phylonodeOrganisms;
        this.phylonodePubs = phylonodePubs;
        this.phylonodeRelationshipsForSubjectId = phylonodeRelationshipsForSubjectId;
        this.phylonodeDbXRefs = phylonodeDbXRefs;
        this.phylonodeProps = phylonodeProps;
    }

    // Property accessors
    private int getPhylonodeId() {
        return this.phylonodeId;
    }

    private void setPhylonodeId(int phylonodeId) {
        this.phylonodeId = phylonodeId;
    }

    private Phylotree getPhylotree() {
        return this.phylotree;
    }

    private void setPhylotree(Phylotree phylotree) {
        this.phylotree = phylotree;
    }

    public Phylonode getParent() {
        return this.parent;
    }

    private void setParent(Phylonode parent) {
        this.parent = parent;
    }

    public CvTerm getCvTerm() {
        return this.cvTerm;
    }

    private void setCvTerm(CvTerm cvTerm) {
        this.cvTerm = cvTerm;
    }

    private Feature getFeature() {
        return this.feature;
    }

    private void setFeature(Feature feature) {
        this.feature = feature;
    }

    private int getLeftIdx() {
        return this.leftIdx;
    }

    private void setLeftIdx(int leftIdx) {
        this.leftIdx = leftIdx;
    }

    private int getRightIdx() {
        return this.rightIdx;
    }

    private void setRightIdx(int rightIdx) {
        this.rightIdx = rightIdx;
    }

    public String getLabel() {
        return this.label;
    }

    private void setLabel(String label) {
        this.label = label;
    }

    private Double getDistance() {
        return this.distance;
    }

    private void setDistance(Double distance) {
        this.distance = distance;
    }

    private Collection<PhylonodeRelationship> getPhylonodeRelationshipsForObjectId() {
        return this.phylonodeRelationshipsForObjectId;
    }

    private void setPhylonodeRelationshipsForObjectId(
            Collection<PhylonodeRelationship> phylonodeRelationshipsForObjectId) {
        this.phylonodeRelationshipsForObjectId = phylonodeRelationshipsForObjectId;
    }

    public Collection<PhylonodeOrganism> getPhylonodeOrganisms() {
        return this.phylonodeOrganisms;
    }

    private void setPhylonodeOrganisms(Collection<PhylonodeOrganism> phylonodeOrganisms) {
        this.phylonodeOrganisms = phylonodeOrganisms;
    }

    private Collection<PhylonodePub> getPhylonodePubs() {
        return this.phylonodePubs;
    }

    private void setPhylonodePubs(Collection<PhylonodePub> phylonodePubs) {
        this.phylonodePubs = phylonodePubs;
    }

    private Collection<PhylonodeRelationship> getPhylonodeRelationshipsForSubjectId() {
        return this.phylonodeRelationshipsForSubjectId;
    }

    private void setPhylonodeRelationshipsForSubjectId(
            Set<PhylonodeRelationship> phylonodeRelationshipsForSubjectId) {
        this.phylonodeRelationshipsForSubjectId = phylonodeRelationshipsForSubjectId;
    }

    private Collection<PhylonodeDbXRef> getPhylonodeDbXRefs() {
        return this.phylonodeDbXRefs;
    }

    private void setPhylonodeDbXRefs(Collection<PhylonodeDbXRef> phylonodeDbXRefs) {
        this.phylonodeDbXRefs = phylonodeDbXRefs;
    }

    private Collection<PhylonodeProp> getPhylonodeProps() {
        return this.phylonodeProps;
    }

    private void setPhylonodeProps(Collection<PhylonodeProp> phylonodeProps) {
        this.phylonodeProps = phylonodeProps;
    }

    public Collection<Phylonode> getPhylonodes() {
        return children;
    }

    private void setPhylonodes(Collection<Phylonode> children) {
        this.children = children;
    }
}
