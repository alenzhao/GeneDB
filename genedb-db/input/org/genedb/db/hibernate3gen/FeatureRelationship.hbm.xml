<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Generated May 23, 2006 11:00:32 PM by Hibernate Tools 3.1.0.beta5 -->
<hibernate-mapping>
    <class name="org.genedb.db.hibernate3gen.FeatureRelationship" table="feature_relationship">
        <comment>features can be arranged in graphs, eg exon part_of transcript part_of gene; translation madeby transcript if type is thought of as a verb, each arc makes a
        statement [SUBJECT VERB OBJECT] object can also be thought of as parent (containing feature), and subject as child (contained feature or subfeature) -- we include the
        relationship rank/order, because even though most of the time we can order things implicitly by sequence coordinates, we cant always do this - eg transpliced genes. its
        also useful for quickly getting implicit introns</comment>
        <id name="featureRelationshipId" type="int">
            <column name="feature_relationship_id" />
            <generator class="sequence" >
				<param name="sequence">feature_relationship_feature_relationship_id_seq</param>
            </generator>
        </id>
        <many-to-one name="featureBySubjectId" class="org.genedb.db.jpa.Feature" fetch="select">
            <column name="subject_id" not-null="true">
                <comment>the subject of the subj-predicate-obj sentence. This is typically the subfeature</comment>
            </column>
        </many-to-one>
        <many-to-one name="featureByObjectId" class="org.genedb.db.jpa.Feature" fetch="select">
            <column name="object_id" not-null="true">
                <comment>the object of the subj-predicate-obj sentence. This is typically the container feature</comment>
            </column>
        </many-to-one>
        <many-to-one name="cvterm" class="org.genedb.db.hibernate3gen.CvTerm" fetch="select">
            <column name="type_id" not-null="true">
                <comment>relationship type between subject and object. This is a cvterm, typically from the OBO relationship ontology, although other relationship types are
                allowed. The most common relationship type is OBO_REL:part_of. Valid relationship types are constrained by the Sequence Ontology</comment>
            </column>
        </many-to-one>
        <property name="value" type="string">
            <column name="value">
                <comment>Additional notes/comments</comment>
            </column>
        </property>
        <property name="rank" type="int">
            <column name="rank" not-null="true">
                <comment>The ordering of subject features with respect to the object feature may be important (for example, exon ordering on a transcript - not always derivable if
                you take trans spliced genes into consideration). rank is used to order these; starts from zero</comment>
            </column>
        </property>
        <set name="featureRelationshipprops" inverse="true">
            <key>
                <column name="feature_relationship_id" not-null="true" />
            </key>
            <one-to-many class="org.genedb.db.hibernate3gen.FeatureRelationshipProp" />
        </set>
        <set name="featureRelationshipPubs" inverse="true">
            <key>
                <column name="feature_relationship_id" not-null="true" />
            </key>
            <one-to-many class="org.genedb.db.hibernate3gen.FeatureRelationshipPub" />
        </set>
    </class>
</hibernate-mapping>
