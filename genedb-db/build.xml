<?xml version="1.0"?>

<project name="genedb-db" default="fulljar-db" basedir=".">
    <description>This project will build the GeneDB (or any generic Chado) interface</description>

    <!-- If this file is imported into another build.xml, resolve filenames
         relative to here rather than the importing project. -->
    <dirname property="imported.basedir.db" file="${ant.file.genedb-db}"/>

    <import file="${imported.basedir.db}/../genedb-libs/build.xml" />
    <import file="${imported.basedir.db}/../genedb-util/build.xml"/>

    <!-- Paths/Properties you may have to change -->

    <!-- Paths/Properties -->

    <property name="version" value="0.2"/>
    <property name="jar-build" value="ant-build/jar-build"/>

    <!-- Classpaths -->
    <path id="db-classpath">
        <fileset dir="${imported.basedir.db}/lib">
          <include name="*.jar"/>
        </fileset>
        <pathelement location="${imported.basedir.libs}/lib/biojava/biojava-1.6.jar"/>
        <pathelement location="${imported.basedir.util}/ant-build/dist/genedb-util.jar"/>
    </path>

    <!-- Targets -->

    <!-- General building, cleaning, JARing type targets -->

	<!-- An internal init target -->
    <target name="setup-db" depends="fulljar-util">
        <init project="db"/>
        <mkdir dir="${imported.basedir.db}/ant-build/test" />
        <mkdir dir="${imported.basedir.db}/ant-build/test-classes" />
        <mkdir dir="${imported.basedir.db}/ant-build/springless-classes" />
    </target>


    <target name="fulljar-db" depends="setup-db"
        description="--> Prepare a JAR file with the chado/JDK1.5+ interface">

        <compile-target project="db" />

        <antcall target="build-time-weave">
            <param name="directory" value="${imported.basedir.db}/ant-build/classes"/>
        </antcall>

        <jar jarfile="${imported.basedir.db}/ant-build/dist/genedb-db.jar">
            <fileset dir="${imported.basedir.db}/ant-build/classes" />
            <manifest>
                <attribute name="Implementation-Title" value="Chado Interface"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
        </jar>

    </target>

    <target name="make-springless-jar" depends="setup-db">
        <javac srcdir="${imported.basedir.db}/src"
            classpathref="db-classpath"
            destdir="${imported.basedir.db}/ant-build/springless-classes"
            encoding="utf-8" debug="on" />

        <antcall target="hibernate-instrumentation">
            <param name="directory" value="${imported.basedir.db}/ant-build/springless-classes"/>
        </antcall>

        <jar jarfile="${imported.basedir.db}/ant-build/dist/genedb-db-springless.jar">
            <fileset dir="${imported.basedir.db}/ant-build/springless-classes" />
            <manifest>
                <attribute name="Implementation-Title" value="Chado Interface (Springless)"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
        </jar>
    </target>

    <target name="make-test-jar" depends="make-springless-jar">
        <copy todir="${imported.basedir.db}/ant-build/test">
            <fileset dir="${imported.basedir.db}/test"/>
        </copy>

        <javac srcdir="${imported.basedir.db}/ant-build/test"
            destdir="${imported.basedir.db}/ant-build/test-classes"
            encoding="utf-8" debug="on">

            <classpath>
                <path refid="db-classpath"/>
                <pathelement location="${imported.basedir.db}/ant-build/dist/genedb-db-springless.jar"/>
            </classpath>
        </javac>

        <copy todir="${imported.basedir.db}/ant-build/test-classes" overwrite="true"
            file="${imported.basedir.db}/ant-build/test/log4j.test.properties"/>

        <jar jarfile="${imported.basedir.db}/ant-build/dist/genedb-db-test.jar">
            <fileset dir="${imported.basedir.db}/ant-build/test-classes" />
            <manifest>
                <attribute name="Implementation-Title" value="Chado Interface Test Code"/>
                <attribute name="Implementation-Version" value="${version}"/>
            </manifest>
        </jar>
    </target>

    <target name="run-tests" depends="make-test-jar,make-pfalciparum-database-if-necessary">
      <junit printsummary="yes" haltonfailure="yes" fork="true">
        <jvmarg value="-Xmx256m"/>
        <jvmarg value="-classic"/>
        <classpath>
            <path refid="db-classpath"/>
            <pathelement location="${imported.basedir.db}/ant-build/dist/genedb-db-test.jar"/>
            <pathelement location="${imported.basedir.db}/ant-build/dist/genedb-db-springless.jar"/>
        </classpath>
        <sysproperty key="build.tests" value="${build.tests}"/>
        <formatter type="brief" usefile="false" />
        <batchtest>
          <fileset dir="${imported.basedir.db}/ant-build/test-classes">
            <include name="**/*Test.*" />
          </fileset>
        </batchtest>
      </junit>
    </target>

    <target name="hibernate-instrumentation">
        <!-- This task is used to instrument the Feature class to enable lazy property fetching -->
        <taskdef name="instrument"
            classname="org.hibernate.tool.instrument.javassist.InstrumentTask"
            classpathref="db-classpath"/>

        <instrument verbose="false">
            <fileset dir="${directory}">
                <include name="org/gmod/schema/mapped/Feature.class"/>
                <include name="org/gmod/schema/feature/*.class"/>
            </fileset>
        </instrument>
    </target>


    <!-- Invoke the hibernate instrumentation and compile-time weaving -->
    <!-- Called from an Eclipse ant task, as well as from fulljar-db -->
    <target name="build-time-weave">
        <antcall target="hibernate-instrumentation"/>
        <iajc-target project="db" directory="${directory}"/>
    </target>

    <!-- Test database set-up below here -->
    <path id="build-test-database-classpath">
        <pathelement location="${imported.basedir.db}/ant-build/dist/genedb-db-test.jar"/>
        <pathelement location="${genedb-db.libdir}/db/postgresql-8.3-603.jdbc4.jar"/>
        <pathelement location="${genedb-db.libdir}/spring-bundle-2.5.6/hsqldb/hsqldb.jar"/>
        <pathelement location="${genedb-db.libdir}/spring-bundle-2.5.6/log4j/log4j-1.2.15.jar"/>
    </path>

    <target name="prompt-for-password" depends="fulljar-util" unless="source.password">
        <fail message="The attribute source.url must be supplied" unless="source.url"/>
        <fail message="The attribute source.username must be supplied" unless="source.username"/>

        <taskdef name="password" classname="org.genedb.anttasks.Password" classpath="${imported.basedir.db}/../genedb-util/ant-build/dist/genedb-util.jar" />
        <password name="source.password" prompt="Password for ${source.username}@${source.url}" />
    </target>

    <target name="make-schema-database" depends="prompt-for-password,make-test-jar">
        <java fork="true" maxmemory="256m" failonerror="true" classname="org.genedb.db.test.tools.BuildTestDatabase">
            <classpath refid="build-test-database-classpath"/>
            <jvmarg line="-server" />
            <arg value="--only-schema"/>
            <arg value="${source.url}"/>
            <arg value="${source.username}"/>
            <arg value="${source.password}"/>
            <arg value="schema"/>
        </java>
    </target>

    <target name="make-skeleton-database-if-necessary" depends="does-skeleton-database-exist" unless="db.skeleton.exists">
        <antcall target="make-skeleton-database"/>
    </target>
    <target name="does-skeleton-database-exist">
        <available property="db.skeleton.exists" file="${imported.basedir.db}/test-data/hsqldb/skeleton.data"/>
    </target>
    <target name="make-skeleton-database" depends="prompt-for-password,fulljar-util,make-test-jar">
        <java fork="true" dir="${imported.basedir.db}" maxmemory="256m" failonerror="true" classname="org.genedb.db.test.tools.BuildTestDatabase">
            <classpath refid="build-test-database-classpath"/>
            <jvmarg line="-server" />
            <arg value="${source.url}"/>
            <arg value="${source.username}"/>
            <arg value="${source.password}"/>
            <arg value="skeleton"/>
        </java>
    </target>

    <target name="make-pfalciparum-database-if-necessary" depends="does-pfalciparum-database-exist" unless="db.pfalciparum.exists">
        <antcall target="make-pfalciparum-database"/>
    </target>
    <target name="does-pfalciparum-database-exist">
        <available property="db.pfalciparum.exists" file="${imported.basedir.db}/test-data/hsqldb/pfalciparum.data"/>
    </target>
    <target name="make-pfalciparum-database" depends="prompt-for-password,fulljar-util,make-test-jar">
        <java fork="true" dir="${imported.basedir.db}"
                maxmemory="512m" failonerror="true" classname="org.genedb.db.test.tools.BuildTestDatabase">
            <classpath refid="build-test-database-classpath"/>
            <jvmarg line="-server" />
            <arg value="${source.url}"/>
            <arg value="${source.username}"/>
            <arg value="${source.password}"/>
            <arg value="pfalciparum"/>
            <arg value="27"/>
        </java>
    </target>

    <target name="delete-databases">
        <delete>
            <fileset dir="${imported.basedir.db}/test-data/hsqldb">
                <include name="*"/>
            </fileset>
        </delete>
    </target>

    <target name="rebuild-test-databases" depends="prompt-for-password, delete-databases, make-schema-database, make-skeleton-database, make-pfalciparum-database"/>

    <target name="db-get-extra-jars" depends="fulljar-util">
      <init topdir="${imported.basedir.db}" />
      <copy file="${imported.basedir.db}/../genedb-util/ant-build/dist/genedb-util.jar" todir="${imported.basedir.db}/lib" />
    </target>

</project>
