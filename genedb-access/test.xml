<!-- Ant test targets for genedb-access. Imported by build.xml -->

<project name="genedb-access.test">

    <path id="test-classpath">
        <pathelement location="${imported.basedir.access}/ant-build/test-classes"/>
        <pathelement location="${genedb-access.jar}"/>
        <path refid="exec-classpath"/>
    </path>

    <target name="compile-tests" depends="fulljar-access">
      <mkdir dir="${imported.basedir.access}/${build.dir}/test-classes"/>
      <javac srcdir="${imported.basedir.access}/test" destdir="${imported.basedir.access}/${build.dir}/test-classes" debug="true"
          classpathref="test-classpath"/>

      <iajc-target project="access" directory="${imported.basedir.access}/ant-build/test-classes"/>

      <copy todir="${imported.basedir.access}/ant-build/test-classes" overwrite="true">
          <fileset dir="${imported.basedir.access}/test">
              <include name="*.properties"/>
          </fileset>
      </copy>
    </target>

    <target name="all-tests" depends="fulljar-access,compile-tests,
        file-test,location-test,embl-test,ortho-test,interpro-test"/>
    <target name="file-test" depends="compile-tests">
        <junit showoutput="yes" printsummary="yes" haltonfailure="yes" fork="true">
            <classpath refid="test-classpath"/>
            <formatter type="brief" usefile="false" />
            <test name="org.genedb.db.loading.FastaFileTest"/>
            <test name="org.genedb.db.loading.EmblFileTest"/>
        </junit>
    </target>
    <target name="location-test" depends="compile-tests">
        <junit showoutput="yes" printsummary="yes" haltonfailure="yes" fork="true">
            <classpath refid="test-classpath"/>
            <formatter type="brief" usefile="false" />
            <test name="org.genedb.db.loading.EmblLocationTest"/>
        </junit>
    </target>
    <target name="check-properties">
        <fail message="The property 'dbhost' is not set. Usually you should set the property 'load' to refer to a property file"
            unless="dbhost"/>
        <fail message="The property 'dbport' is not set. Usually you should set the property 'load' to refer to a property file"
            unless="dbport"/>
        <fail message="The property 'dbname' is not set. Usually you should set the property 'load' to refer to a property file"
            unless="dbname"/>
        <fail message="The property 'dbuser' is not set. Usually you should set the property 'load' to refer to a property file"
            unless="dbuser"/>
    </target>
    <target name="copy-skeleton-database" depends="check-properties">
        <antcall target="genedb-db.make-skeleton-database-if-necessary">
            <param name="source.url"      value="jdbc:postgresql://${dbhost}:${dbport}/${dbname}"/>
            <param name="source.username" value="${dbuser}"/>
        </antcall>

        <copy todir="${imported.basedir.access}/test/data" overwrite="true">
            <fileset dir="${imported.basedir.access}/../genedb-db/test-data/hsqldb" includes="skeleton.*"/>
        </copy>
    </target>
    <target name="copy-pfalciparum-database" depends="check-properties">
        <antcall target="genedb-db.make-pfalciparum-database-if-necessary">
            <param name="source.url"      value="jdbc:postgresql://${dbhost}:${dbport}/${dbname}"/>
            <param name="source.username" value="${dbuser}"/>
        </antcall>

        <copy todir="${imported.basedir.access}/test/data" overwrite="true">
            <fileset dir="${imported.basedir.access}/../genedb-db/test-data/hsqldb" includes="pfalciparum.*"/>
        </copy>
    </target>
    <target name="embl-test" depends="compile-tests">
        <antcall target="run-specific-embl-test"><param name="subtest" value="Berghei"/></antcall>
        <antcall target="run-specific-embl-test"><param name="subtest" value="Mansoni"/></antcall>
        <antcall target="run-specific-embl-test"><param name="subtest" value="Synthetic"/></antcall>
        <antcall target="run-specific-embl-test"><param name="subtest" value="Reload"/></antcall>
    </target>
    <!-- If you antcall a target that has dependencies, all the dependencies are executed
         EVEN IF they have already been executed. Therefore we have an internal target
         run-specific-embl-test, with no dependencies, that we antcall; and an external
         target specific-embl-test that does have dependencies. -->
    <target name="specific-embl-test" depends="fulljar-access,compile-tests,run-specific-embl-test"/>
    <target name="run-specific-embl-test">
        <antcall target="copy-skeleton-database"/>
        <junit showoutput="no" printsummary="yes" haltonfailure="yes" fork="true" maxmemory="512M">
            <classpath refid="test-classpath"/>
            <formatter type="brief" usefile="false" />
            <test name="org.genedb.db.loading.EmblLoader${subtest}Test"/>
        </junit>
    </target>
    <target name="ortho-test" depends="compile-tests">
        <antcall target="run-specific-ortho-test"><param name="subtest" value="ImplicitCluster"/></antcall>
        <antcall target="run-specific-ortho-test"><param name="subtest" value="Unclustered"/></antcall>
        <antcall target="run-specific-ortho-test"><param name="subtest" value="Clustered"/></antcall>
    </target>
    <target name="specific-ortho-test" depends="compile-tests,run-specific-ortho-test"/>
    <target name="run-specific-ortho-test">
        <antcall target="copy-skeleton-database"/>
        <junit showoutput="no" printsummary="yes" haltonfailure="yes" fork="true" maxmemory="512M">
            <classpath refid="test-classpath"/>
            <formatter type="brief" usefile="false" />
            <test name="org.genedb.db.loading.OrthologueLoader${subtest}Test"/>
        </junit>
    </target>
    <target name="interpro-test" depends="compile-tests">
        <antcall target="copy-pfalciparum-database"/>
        <junit showoutput="no" printsummary="yes" haltonfailure="yes" fork="true" maxmemory="512M">
            <classpath refid="test-classpath"/>
            <formatter type="brief" usefile="false" />
            <test name="org.genedb.db.loading.auxiliary.InterProLoaderTest"/>
        </junit>
    </target>
</project>