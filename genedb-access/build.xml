<?xml version="1.0"?>

<project name="genedb-access" default="fulljar-access" basedir=".">

        <!-- If this file is imported into another build.xml, resolve filenames
             relative to here rather than the importing project. -->
  <dirname property="imported.basedir.access" file="${ant.file.genedb-access}"/>

  <import file="${imported.basedir.access}/test.xml"/>

  <import file="${imported.basedir.access}/../genedb-libs/build.xml"/>
  <import file="${imported.basedir.access}/../genedb-db/build.xml"/>
  <import file="${imported.basedir.access}/../genedb-util/build.xml"/>

  <property file="property-file.${load}" />
  <property name="lib-dir" value="${imported.basedir.libs}/lib/"/>

  <property name="genedb-access.jar"
      value="${imported.basedir.access}/${dist.dir}/genedb-access.jar"/>

  <path id="access-classpath">
      <fileset dir="${imported.basedir.access}/lib">
        <include name="*.jar"/>
      </fileset>
      <pathelement location="${lib-dir}/biojava/biojava-1.6.jar"/>
      <pathelement location="${lib-dir}/db/postgresql-8.3-603.jdbc4.jar"/>
      <pathelement location="${genedb-util.jar}"/>
      <pathelement location="${genedb-db.jar}"/>
  </path>


  <target name="init-access">
    <init-target project="access"/>
  </target>

  <target name="compile-access" depends="init-access, genedb-db.fulljar-db">
      <compile-target project="access" />
      <iajc-target project="access" />
      <copy todir="${imported.basedir.access}/ant-build/classes" overwrite="true">
        <fileset dir="${imported.basedir.access}/resources" />
        <fileset dir="${imported.basedir.access}/conf" />
      </copy>
  </target>

  <target name="replace">
      <fail message="The 'load' property must be set" unless="load"/>
      <fail message="The file property-file.${load} does not exist">
          <condition>
              <not>
                  <available file="${imported.basedir.access}/property-file.${load}"/>
              </not>
          </condition>
      </fail>

      <copy file="${imported.basedir.access}/property-file.${load}" tofile="${imported.basedir.access}/resources/project.properties"
          overwrite="true" />
  </target>

  <target name="fulljar-access" depends="replace,compile-access" description="Create JAR file">
    <jar-target project="access"/>
  </target>

    <path id="exec-classpath">
        <path refid="access-classpath" />
        <pathelement location="${genedb-access.jar}"/>
    </path>

    <target name="check-properties">
        <fail message="The property 'dbhost' is not set. Usually you should set the property 'load' to refer to a property file"
            unless="dbhost"/>
        <fail message="The property 'dbport' is not set. Usually you should set the property 'load' to refer to a property file"
            unless="dbport"/>
        <fail message="The property 'dbname' is not set. Usually you should set the property 'load' to refer to a property file"
            unless="dbname"/>
        <fail message="The property 'dbuser' is not set. Usually you should set the property 'load' to refer to a property file"
            unless="dbuser"/>
    </target>
    <target name="prompt-for-password" depends="fulljar-util,check-properties" unless="dbpassword">
        <taskdef name="password" classname="org.genedb.anttasks.Password" classpath="${imported.basedir.access}/../genedb-util/ant-build/dist/genedb-anttasks.jar" />
        <password name="dbpassword" prompt="Password for ${dbuser}@jdbc:postgresql://${dbhost}:${dbport}/${dbname}" />
    </target>

    <target name="load-embl" depends="fulljar-access">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.LoadEmbl">
            <sysproperty key="load.organismCommonName" value="${organism}"/>
            <sysproperty key="load.inputDirectory" value="${file}"/>
            <syspropertyset>
                <propertyref builtin="commandline"/>
            </syspropertyset>
            <jvmarg line="-Xmx350M"/>
        </java>
    </target>

    <target name="load-fasta" depends="fulljar-access">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.LoadFasta">
            <sysproperty key="load.organismCommonName" value="${organism}"/>
            <sysproperty key="load.inputDirectory" value="${file}"/>
            <syspropertyset>
                <propertyref builtin="commandline"/>
            </syspropertyset>
            <jvmarg line="-Xmx350M"/>
        </java>
    </target>

    <target name="delete-organism" depends="fulljar-access">
       <sql driver="org.postgresql.Driver"
           url="jdbc:postgresql://${dbhost}:${dbport}/${dbname}"
           userid="${dbuser}" password="${dbpassword}">

           <classpath>
              <pathelement location="${lib-dir}/db/postgresql-8.3-603.jdbc4.jar"/>
           </classpath>

           delete from feature where organism_id in (
               select organism_id from organism where common_name = '${organism}'
           );

           delete from synonym where synonym_id in (
             select synonym_id from synonym
             except (
                 select synonym_id from feature_synonym
                 union
                 select synonym_id from library_synonym
             )
           );
        </sql>
    </target>

    <target name="reload-embl" depends="delete-organism,load-embl"/>

    <target name="load-orthologues" depends="fulljar-access">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.LoadOrthologues">
            <sysproperty key="load.organismCommonName" value="${organism}"/>
            <sysproperty key="load.inputDirectory" value="${file}"/>
            <syspropertyset>
                <propertyref builtin="commandline"/>
            </syspropertyset>
            <jvmarg line="-Xmx256M"/>
        </java>
    </target>

    <target name="load-vulgar" depends="fulljar-access">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.LoadVulgar">
            <sysproperty key="load.organismCommonName" value="${organism}"/>
            <sysproperty key="load.inputDirectory" value="${file}"/>
            <syspropertyset>
                <propertyref builtin="commandline"/>
            </syspropertyset>
            <jvmarg line="-Xmx768M"/>
        </java>
    </target>

    <target name="load-interpro" depends="load-interpro-polypeptide-ids, load-interpro-gene-ids"/>
    <target name="load-interpro-polypeptide-ids" depends="fulljar-access" unless="load.interpro.gene-ids">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.Load">
            <arg line="iploader --key-type=polypeptide ${file}"/>
           <jvmarg line="-server -Xmx256m"/>
        </java>
        <antcall target="delete-redundant-go"/>
    </target>
    <target name="load-interpro-gene-ids" depends="fulljar-access" if="load.interpro.gene-ids">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.Load">
            <arg line="iploader --key-type=gene ${file}"/>
           <jvmarg line="-server -Xmx256m"/>
        </java>
        <antcall target="delete-redundant-go"/>
    </target>
    <target name="clear-interpro" depends="fulljar-access">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.ClearInterPro">
            <arg line="${organism}"/>
            <jvmarg line="-server -Xmx256m"/>
        </java>
    </target>
    <target name="reload-interpro" depends="clear-interpro,load-interpro"/>


    <target name="load-tmhmm" depends="fulljar-access">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.Load">
            <arg line="tmhmmloader ${file}"/>
            <jvmarg line="-server -Xmx256m"/>
        </java>
    </target>
    <target name="clear-tmhmm" depends="fulljar-access">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.ClearTMHMM">
            <arg line="${organism}"/>
            <jvmarg line="-server -Xmx256m"/>
        </java>
    </target>
    <target name="reload-tmhmm" depends="clear-tmhmm,load-tmhmm" />


    <target name="load-dgpi" depends="fulljar-access">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.Load">
            <arg line="dgpiloader ${file}"/>
            <jvmarg line="-server -Xmx256m"/>
        </java>
    </target>
    <target name="clear-dgpi" depends="fulljar-access">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.ClearDGPI">
            <arg line="${organism}"/>
            <jvmarg line="-server -Xmx256m"/>
        </java>
    </target>
    <target name="reload-dgpi" depends="clear-dgpi,load-dgpi" />


    <target name="load-signalp" depends="fulljar-access">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.Load">
            <arg line="signalploader ${file}"/>
            <jvmarg line="-server -Xmx256m"/>
        </java>
    </target>
    <target name="clear-signalp" depends="fulljar-access">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.ClearSignalP">
            <arg line="${organism}"/>
            <jvmarg line="-server -Xmx256m"/>
        </java>
    </target>
    <target name="reload-signalp" depends="clear-signalp,load-signalp"/>


    <target name="load-plasmoap" depends="fulljar-access">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.Load">
            <arg line="plasmoaploader ${file}"/>
            <jvmarg line="-server -Xmx256m"/>
        </java>
    </target>
    <target name="clear-plasmoap" depends="fulljar-access">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.ClearPlasmoAP">
            <arg line="${organism}"/>
            <jvmarg line="-server -Xmx256m"/>
        </java>
    </target>
    <target name="reload-plasmoap" depends="clear-plasmoap,load-plasmoap"/>


    <target name="delete-redundant-go" depends="fulljar-access">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.DeleteRedundantGOTerms"/>
    </target>


    <target name="fix-residues-verbose" depends="fulljar-access" if="verbose">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.fixup.FixResidues">
            <arg value="--verbose" />
            <arg line="${organism}"/>
        </java>
    </target>
    <target name="fix-residues-nonverbose" depends="fulljar-access" unless="verbose">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.fixup.FixResidues">
            <arg line="${organism}"/>
        </java>
    </target>
    <target name="fix-residues" depends="fix-residues-verbose, fix-residues-nonverbose" />

    <target name="fix-residues-mansoni" depends="fulljar-access">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.fixup.FixResidues">
            <arg value="--verbose" />
            <arg value="--mark-fragments"/>
            <arg value="--guess-frame=force"/>
            <arg value="Smansoni" />
        </java>
    </target>

    <target name="load-opi-references" depends="fulljar-access">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.Load">
            <arg line="opi-referencesloader"/>
        </java>
    </target>

    <target name="clear-opi-references" depends="fulljar-access">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.ClearOPIReferences"/>
    </target>

    <target name="reload-opi-references" depends="clear-opi-references,load-opi-references"/>

    <!-- Note: does not force a recompile; use "ant fulljar-access adhoc-query" for that -->
    <target name="adhoc-query" depends="adhoc-query-verbose, adhoc-query-nonverbose"/>
    <target name="adhoc-query-verbose" if="verbose">
        <java fork="true" classname="org.genedb.db.adhoc.Query" classpathref="exec-classpath">
            <arg value="--verbose"/>
        </java>
    </target>
    <target name="adhoc-query-nonverbose" unless="verbose">
        <java fork="true" classname="org.genedb.db.adhoc.Query" classpathref="exec-classpath"/>
    </target>

</project>
