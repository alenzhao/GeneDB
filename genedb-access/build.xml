<?xml version="1.0"?>

<project name="genedb-access" default="access-fulljar" basedir=".">

        <!-- If this file is imported into another build.xml, resolve filenames
             relative to here rather than the importing project. -->
  <dirname property="imported.basedir.access" file="${ant.file.genedb-access}"/>

  <import file="${imported.basedir.access}/test.xml"/>

  <import file="${imported.basedir.access}/../genedb-libs/build.xml"/>
  <import file="${imported.basedir.access}/../genedb-db/build.xml"/>
  <import file="${imported.basedir.access}/../genedb-util/build.xml"/>

  <property file="property-file.${load}" />
  <property name="lib-dir" value="${imported.basedir.libs}/lib/"/>

  <property name="genedb-access.jar"
      value="${imported.basedir.access}/${dist.dir}/genedb-access.jar"/>

  <path id="access-classpath">
      <fileset dir="${imported.basedir.access}/lib">
        <include name="*.jar"/>
      </fileset>
      <pathelement location="${lib-dir}/biojava/biojava-1.6.jar"/>
      <pathelement location="${lib-dir}/db/postgresql-8.3-603.jdbc4.jar"/>
      <pathelement location="${genedb-util.jar}"/>
      <pathelement location="${genedb-db.jar}"/>
  </path>


  <target name="access-init">
    <init-target project="access"/>
  </target>

  <target name="access-compile" depends="access-init, access-populate-lib, genedb-db.db-fulljar">
      <compile-target project="access" />
      <iajc-target project="access" />
      <copy todir="${imported.basedir.access}/ant-build/classes" overwrite="true">
        <fileset dir="${imported.basedir.access}/resources" />
        <fileset dir="${imported.basedir.access}/conf" />
      </copy>
  </target>


    <target name="access-populate-lib" depends="check.access-lib-uptodate" unless="access.lib-uptodate">
        <populate directory="genedb-access" />
        <!-- <copy todir="lib">
            <fileset dir="${imported.basedir.libs}/lib/biojava">
                <include name="biojava-1.6.jar"/>
                <include name="bytecode-0.91.jar"/>
            </fileset>
        </copy> -->
    </target>

    <target name="check.access-lib-uptodate" depends="access-init" if="access.ivy-timestamp-exists">
        <uptodate property="access.lib-uptodate" srcfile="${imported.basedir.access}/ivy.xml" targetfile="${imported.basedir.access}/lib/ivy.timestamp.txt" />
    </target>


  <target name="access-clean">
    <clean-target project="access" />
  </target>

  <target name="replace">
      <fail message="The 'load' property must be set" unless="load"/>
      <fail message="The file property-file.${load} does not exist">
          <condition>
              <not>
                  <available file="${imported.basedir.access}/property-file.${load}"/>
              </not>
          </condition>
      </fail>

      <copy file="${imported.basedir.access}/property-file.${load}" tofile="${imported.basedir.access}/resources/project.properties"
          overwrite="true" />
  </target>

  <target name="access-fulljar" depends="replace,access-compile" description="Create JAR file">
    <jar-target project="access"/>
  </target>

    <path id="exec-classpath">
        <path refid="access-classpath" />
        <pathelement location="${genedb-access.jar}"/>
    </path>

    <target name="check-properties">
        <fail message="The property 'dbhost' is not set. Usually you should set the property 'load' to refer to a property file"
            unless="dbhost"/>
        <fail message="The property 'dbport' is not set. Usually you should set the property 'load' to refer to a property file"
            unless="dbport"/>
        <fail message="The property 'dbname' is not set. Usually you should set the property 'load' to refer to a property file"
            unless="dbname"/>
        <fail message="The property 'dbuser' is not set. Usually you should set the property 'load' to refer to a property file"
            unless="dbuser"/>
    </target>
    <target name="prompt-for-password" depends="util-fulljar,check-properties" unless="dbpassword">
        <taskdef name="password" classname="org.genedb.anttasks.Password" classpath="${imported.basedir.access}/../genedb-util/ant-build/dist/genedb-anttasks.jar" />
        <password name="dbpassword" prompt="Password for ${dbuser}@jdbc:postgresql://${dbhost}:${dbport}/${dbname}" />
    </target>

    <target name="load-embl" depends="access-fulljar">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.LoadEmbl">
            <sysproperty key="load.organismCommonName" value="${organism}"/>
            <sysproperty key="load.inputDirectory" value="${file}"/>
            <syspropertyset>
                <propertyref builtin="commandline"/>
            </syspropertyset>
            <jvmarg line="-Xmx350M"/>
        </java>
    </target>

    <target name="load-fasta" depends="access-fulljar">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.LoadFasta">
            <sysproperty key="load.organismCommonName" value="${organism}"/>
            <sysproperty key="load.inputDirectory" value="${file}"/>
            <syspropertyset>
                <propertyref builtin="commandline"/>
            </syspropertyset>
            <jvmarg line="-Xmx350M"/>
        </java>
    </target>

    <target name="delete-organism" depends="access-fulljar">
       <sql driver="org.postgresql.Driver"
           url="jdbc:postgresql://${dbhost}:${dbport}/${dbname}"
           userid="${dbuser}" password="${dbpassword}">

           <classpath>
              <pathelement location="${lib-dir}/db/postgresql-8.3-603.jdbc4.jar"/>
           </classpath>

           delete from feature where organism_id in (
               select organism_id from organism where common_name = '${organism}'
           );

           delete from synonym where synonym_id in (
             select synonym_id from synonym
             except (
                 select synonym_id from feature_synonym
                 union
                 select synonym_id from library_synonym
             )
           );
        </sql>
    </target>

    <target name="reload-embl" depends="delete-organism,load-embl"/>

    <target name="load-orthologues" depends="access-fulljar">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.LoadOrthologues">
            <sysproperty key="load.organismCommonName" value="${organism}"/>
            <sysproperty key="load.inputDirectory" value="${file}"/>
            <syspropertyset>
                <propertyref builtin="commandline"/>
            </syspropertyset>
            <jvmarg line="-Xmx512M"/>
        </java>
    </target>

    <target name="delete-orthologues" depends="access-fulljar">

       <fail message="The properties load.dataset and load.analysis.algorithm must be specified">
        <condition>
          <not>
            <and>
                <isset property="load.dataset"/>
                <isset property="load.analysis.algorithm"/>
            </and>
          </not>
        </condition>
       </fail>

       <sql driver="org.postgresql.Driver"
           url="jdbc:postgresql://${dbhost}:${dbport}/${dbname}"
           userid="${dbuser}" password="${dbpassword}">

           <classpath>
              <pathelement location="${lib-dir}/db/postgresql-8.3-603.jdbc4.jar"/>
           </classpath>

            select feature.uniquename
            from feature
            join analysisfeature using (feature_id)
            join analysis using (analysis_id)
            join organism using (organism_id)
            where organism.common_name = 'dummy'
            and feature.type_id = (
              select cvterm_id
              from cvterm join cv using (cv_id)
              where cv.name = 'sequence' and cvterm.name = 'protein_match'
            )
            and feature.uniquename like '${load.dataset}:%'
            and analysis.algorithm = '${load.analysis.algorithm}'
            ;
        </sql>
    </target>

    <target name="reload-orthologues" depends="delete-orthologues,load-orthologues"/>

    <target name="load-vulgar" depends="access-fulljar">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.LoadVulgar">
            <sysproperty key="load.organismCommonName" value="${organism}"/>
            <sysproperty key="load.inputDirectory" value="${file}"/>
            <syspropertyset>
                <propertyref builtin="commandline"/>
            </syspropertyset>
            <jvmarg line="-Xmx768M"/>
        </java>
    </target>

    <target name="load-interpro" depends="load-interpro-polypeptide-ids, load-interpro-gene-ids"/>
    <target name="load-interpro-polypeptide-ids" depends="access-fulljar" unless="load.interpro.gene-ids">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.Load">
            <arg line="iploader --key-type=polypeptide ${file}"/>
           <jvmarg line="-server -Xmx256m"/>
        </java>
        <antcall target="delete-redundant-go"/>
    </target>
    <target name="load-interpro-gene-ids" depends="access-fulljar" if="load.interpro.gene-ids">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.Load">
            <arg line="iploader --key-type=gene ${file}"/>
           <jvmarg line="-server -Xmx256m"/>
        </java>
        <antcall target="delete-redundant-go"/>
    </target>
    <target name="clear-interpro" depends="access-fulljar">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.ClearInterPro">
            <arg line="${organism}"/>
            <jvmarg line="-server -Xmx256m"/>
        </java>
    </target>
    <target name="reload-interpro" depends="clear-interpro,load-interpro"/>


    <target name="load-tmhmm" depends="access-fulljar">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.Load">
            <arg line="tmhmmloader ${file}"/>
            <jvmarg line="-server -Xmx256m"/>
        </java>
    </target>
    <target name="clear-tmhmm" depends="access-fulljar">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.ClearTMHMM">
            <arg line="${organism}"/>
            <jvmarg line="-server -Xmx256m"/>
        </java>
    </target>
    <target name="reload-tmhmm" depends="clear-tmhmm,load-tmhmm" />


    <target name="load-dgpi" depends="access-fulljar">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.Load">
            <arg line="dgpiloader ${file}"/>
            <jvmarg line="-server -Xmx256m"/>
        </java>
    </target>
    <target name="clear-dgpi" depends="access-fulljar">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.ClearDGPI">
            <arg line="${organism}"/>
            <jvmarg line="-server -Xmx256m"/>
        </java>
    </target>
    <target name="reload-dgpi" depends="clear-dgpi,load-dgpi" />


    <target name="load-signalp" depends="access-fulljar">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.Load">
            <arg line="signalploader ${file}"/>
            <jvmarg line="-server -Xmx256m"/>
        </java>
    </target>
    <target name="clear-signalp" depends="access-fulljar">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.ClearSignalP">
            <arg line="${organism}"/>
            <jvmarg line="-server -Xmx256m"/>
        </java>
    </target>
    <target name="reload-signalp" depends="clear-signalp,load-signalp"/>


    <target name="load-plasmoap" depends="access-fulljar">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.Load">
            <arg line="plasmoaploader ${file}"/>
            <jvmarg line="-server -Xmx256m"/>
        </java>
    </target>
    <target name="clear-plasmoap" depends="access-fulljar">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.ClearPlasmoAP">
            <arg line="${organism}"/>
            <jvmarg line="-server -Xmx256m"/>
        </java>
    </target>
    <target name="reload-plasmoap" depends="clear-plasmoap,load-plasmoap"/>


    <target name="delete-redundant-go" depends="access-fulljar">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.DeleteRedundantGOTerms"/>
    </target>


    <target name="fix-residues-verbose" depends="access-fulljar" if="verbose">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.fixup.FixResidues">
            <arg value="--verbose" />
            <arg line="${organism}"/>
        </java>
    </target>
    <target name="fix-residues-nonverbose" depends="access-fulljar" unless="verbose">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.fixup.FixResidues">
            <arg line="${organism}"/>
        </java>
    </target>
    <target name="fix-residues" depends="fix-residues-verbose, fix-residues-nonverbose" />

    <target name="fix-residues-mansoni" depends="access-fulljar">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.fixup.FixResidues">
            <arg value="--verbose" />
            <arg value="--mark-fragments"/>
            <arg value="--guess-frame=force"/>
            <arg value="Smansoni" />
        </java>
    </target>

    <target name="load-opi-references" depends="access-fulljar">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.Load">
            <arg line="opi-referencesloader"/>
        </java>
    </target>

    <target name="clear-opi-references" depends="access-fulljar">
        <java fork="true" failonerror="true" classpathref="exec-classpath" classname="org.genedb.db.loading.auxiliary.ClearOPIReferences"/>
    </target>

    <target name="reload-opi-references" depends="clear-opi-references,load-opi-references"/>

    <!-- Note: does not force a recompile; use "ant access-fulljar adhoc-query" for that -->
    <target name="adhoc-query" depends="adhoc-query-verbose, adhoc-query-nonverbose"/>
    <target name="adhoc-query-verbose" if="verbose">
        <java fork="true" classname="org.genedb.db.adhoc.Query" classpathref="exec-classpath">
            <arg value="--verbose"/>
        </java>
    </target>
    <target name="adhoc-query-nonverbose" unless="verbose">
        <java fork="true" classname="org.genedb.db.adhoc.Query" classpathref="exec-classpath"/>
    </target>

</project>
